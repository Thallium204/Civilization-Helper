[gd_resource type="Shader" format=2]

[resource]
code = "shader_type canvas_item;

const float PI = 3.1415926535;

const vec2 dir0 = vec2(+1.0,+0.0);
const vec2 dir1 = vec2(+0.5,+0.866049);
const vec2 dir2 = vec2(-0.5,+0.866049);
const vec2 dir3 = vec2(-1.0,-0.0);
const vec2 dir4 = vec2(+0.5,-0.866049);
const vec2 dir5 = vec2(-0.5,-0.866049);

const int direction_int = 0;

uniform float border_thickness = 0.5;

void fragment() {
	
	COLOR = texture(TEXTURE,UV);
	vec2 UV_centered = UV - vec2(0.5);
	vec2 UV_shifted = UV_centered * (1.0+border_thickness) + vec2(0.5);
	if (texture(TEXTURE,UV).a > 0.5 && texture(TEXTURE,UV_shifted).a < 0.5) {
		float angle = atan(UV_centered.y,UV_centered.x) + 1.0*PI/6.0;
		if (angle < 0.0) {
			angle = 2.0*PI + angle
		}
		if (float(direction_int)*2.0*PI/6.0 < angle && angle < (float(direction_int+1))*2.0*PI/6.0) {
			COLOR.rgb = vec3(1.0);
		}
	}
	
}"
